//! FC16 lib

#![deny(missing_docs)]
#![deny(warnings)]
#![feature(never_type)]
#![no_std]
#![feature(reverse_bits)]


extern crate generic_array;
use generic_array::{ArrayLength,GenericArray};
use generic_array::typenum::Unsigned;

extern crate embedded_hal as hal;
use hal::blocking::spi;
use hal::digital::OutputPin;

extern crate max7219;

use max7219::{Max7219};

//#[macro_export]
macro_rules! minv {
    ($v1:expr, $v2:expr) =>(if $v1 < $v2 { $v1 } else { $v2 })
}

type PixLine = [u8;8];

/// Pixels of all the LED matrices
pub struct PixArray<N: ArrayLength<PixLine>> {
    pixels : GenericArray<PixLine, N>
}

impl<N> PixArray<N> where N: ArrayLength<PixLine> {
    /// Creates a new and empty pixel buffer.
    pub fn new() -> PixArray<N> {
        PixArray { pixels: GenericArray::default() }
    }

    /// Returns a single block from a character.
    pub fn from(c : char) -> Result<PixLine,()> {
        let mut ret : PixLine  = match c {
            ' ' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000],

            '1' => [0b00000000,
                    0b00011000,
                    0b00011000,
                    0b00111000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b01111110],

            '2' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b00000110,
                    0b00001100,
                    0b00110000,
                    0b01100000,
                    0b01111110],

            '3' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b00000110,
                    0b00011100,
                    0b00000110,
                    0b01100110,
                    0b00111100],

            '4' => [0b00000000,
                    0b00001100,
                    0b00011100,
                    0b00101100,
                    0b01001100,
                    0b01111110,
                    0b00001100,
                    0b00001100],

            '5' => [0b00000000,
                    0b01111110,
                    0b01100000,
                    0b01111100,
                    0b00000110,
                    0b00000110,
                    0b01100110,
                    0b00111100],
            '6' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100000,
                    0b01111100,
                    0b01100110,
                    0b01100110,
                    0b00111100],
            '7' => [0b00000000,
                    0b01111110,
                    0b01100110,
                    0b00001100,
                    0b00001100,
                    0b00011000,
                    0b00011000,
                    0b00011000],

            '8' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100110,
                    0b00111100,
                    0b01100110,
                    0b01100110,
                    0b00111100],

            '9' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100110,
                    0b00111110,
                    0b00000110,
                    0b01100110,
                    0b00111100],

            '0' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01101110,
                    0b01110110,
                    0b01100110,
                    0b01100110,
                    0b00111100],

            'A' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100110,
                    0b01111110,
                    0b01100110,
                    0b01100110,
                    0b01100110],
            'B' => [0b00000000,
                    0b01111100,
                    0b01100110,
                    0b01100110,
                    0b01111100,
                    0b01100110,
                    0b01100110,
                    0b01111100],
            'C' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100000,
                    0b01100000,
                    0b01100000,
                    0b01100110,
                    0b00111100],
            'D' => [0b00000000,
                    0b01111100,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01111100],
            'E' => [0b00000000,
                    0b01111110,
                    0b01100000,
                    0b01100000,
                    0b01111100,
                    0b01100000,
                    0b01100000,
                    0b01111110],
            'F' => [0b00000000,
                    0b01111110,
                    0b01100000,
                    0b01100000,
                    0b01111100,
                    0b01100000,
                    0b01100000,
                    0b01100000],
            'G' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100000,
                    0b01100000,
                    0b01101110,
                    0b01100110,
                    0b00111100],
            'H' => [0b00000000,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01111110,
                    0b01100110,
                    0b01100110,
                    0b01100110],
            'I' => [0b00000000,
                    0b00111100,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00111100],
            'J' => [0b00000000,
                    0b00011110,
                    0b00001100,
                    0b00001100,
                    0b00001100,
                    0b01101100,
                    0b01101100,
                    0b00111000],
            'K' => [0b00000000,
                    0b01100110,
                    0b01101100,
                    0b01111000,
                    0b01110000,
                    0b01111000,
                    0b01101100,
                    0b01100110],
            'L' => [0b00000000,
                    0b01100000,
                    0b01100000,
                    0b01100000,
                    0b01100000,
                    0b01100000,
                    0b01100000,
                    0b01111110],
            'M' => [0b00000000,
                    0b01100011,
                    0b01110111,
                    0b01111111,
                    0b01101011,
                    0b01100011,
                    0b01100011,
                    0b01100011],
            'N' => [0b00000000,
                    0b01100011,
                    0b01110011,
                    0b01111011,
                    0b01101111,
                    0b01100111,
                    0b01100011,
                    0b01100011],
            'O' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b00111100],
            'P' => [0b00000000,
                    0b01111100,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01111100,
                    0b01100000,
                    0b01100000],
            'Q' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01101110,
                    0b00111100,
                    0b00000110],
            'R' => [0b00000000,
                    0b01111100,
                    0b01100110,
                    0b01100110,
                    0b01111100,
                    0b01111000,
                    0b01101100,
                    0b01100110],
            'S' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100000,
                    0b00111100,
                    0b00000110,
                    0b01100110,
                    0b00111100],
            'T' => [0b00000000,
                    0b01111110,
                    0b01011010,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000],
            'U' => [0b00000000,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b00111110],
            'V' => [0b00000000,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b00111100,
                    0b00011000],
            'W' => [0b00000000,
                    0b01100011,
                    0b01100011,
                    0b01100011,
                    0b01101011,
                    0b01111111,
                    0b01110111,
                    0b01100011],
            'X' => [0b00000000,
                    0b01100011,
                    0b01100011,
                    0b00110110,
                    0b00011100,
                    0b00110110,
                    0b01100011,
                    0b01100011],
            'Y' => [0b00000000,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b00111100,
                    0b00011000,
                    0b00011000,
                    0b00011000],
            'Z' => [0b00000000,
                    0b01111110,
                    0b00000110,
                    0b00001100,
                    0b00011000,
                    0b00110000,
                    0b01100000,
                    0b01111110],
            'a' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00111100,
                    0b00000110,
                    0b00111110,
                    0b01100110,
                    0b00111110],
            'b' => [0b00000000,
                    0b01100000,
                    0b01100000,
                    0b01100000,
                    0b01111100,
                    0b01100110,
                    0b01100110,
                    0b01111100],
            'c' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100000,
                    0b01100110,
                    0b00111100],
            'd' => [0b00000000,
                    0b00000110,
                    0b00000110,
                    0b00000110,
                    0b00111110,
                    0b01100110,
                    0b01100110,
                    0b00111110],
            'e' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01111110,
                    0b01100000,
                    0b00111100],
            'f' => [0b00000000,
                    0b00011100,
                    0b00110110,
                    0b00110000,
                    0b00110000,
                    0b01111100,
                    0b00110000,
                    0b00110000],
            'g' => [0b00000000,
                    0b00000000,
                    0b00111110,
                    0b01100110,
                    0b01100110,
                    0b00111110,
                    0b00000110,
                    0b00111100],
            'h' => [0b00000000,
                    0b01100000,
                    0b01100000,
                    0b01100000,
                    0b01111100,
                    0b01100110,
                    0b01100110,
                    0b01100110],
            'i' => [0b00000000,
                    0b00000000,
                    0b00011000,
                    0b00000000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00111100],
            'j' => [0b00000000,
                    0b00001100,
                    0b00000000,
                    0b00001100,
                    0b00001100,
                    0b01101100,
                    0b01101100,
                    0b00111000],
            'k' => [0b00000000,
                    0b01100000,
                    0b01100000,
                    0b01100110,
                    0b01101100,
                    0b01111000,
                    0b01101100,
                    0b01100110],
            'l' => [0b00000000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000],
            'm' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b01100011,
                    0b01110111,
                    0b01111111,
                    0b01101011,
                    0b01101011],
            'n' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b01111100,
                    0b01111110,
                    0b01100110,
                    0b01100110,
                    0b01100110],
            'o' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00111100,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b00111100],
            'p' => [0b00000000,
                    0b00000000,
                    0b01111100,
                    0b01100110,
                    0b01100110,
                    0b01111100,
                    0b01100000,
                    0b01100000],
            'q' => [0b00000000,
                    0b00000000,
                    0b00111100,
                    0b01101100,
                    0b01101100,
                    0b00111100,
                    0b00001101,
                    0b00001111],
            'r' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b01111100,
                    0b01100110,
                    0b01100110,
                    0b01100000,
                    0b01100000],
            's' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00111110,
                    0b01000000,
                    0b00111100,
                    0b00000010,
                    0b01111100],
            't' => [0b00000000,
                    0b00000000,
                    0b00011000,
                    0b00011000,
                    0b01111110,
                    0b00011000,
                    0b00011000,
                    0b00011000],
            'u' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b01100110,
                    0b00111110],
            'v' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000,
                    0b01100110,
                    0b01100110,
                    0b00111100,
                    0b00011000],
            'w' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b01100011,
                    0b01101011,
                    0b01101011,
                    0b01101011,
                    0b00111110],
            'x' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b01100110,
                    0b00111100,
                    0b00011000,
                    0b00111100,
                    0b01100110],
            'y' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b01100110,
                    0b01100110,
                    0b00111110,
                    0b00000110,
                    0b00111100],
            'z' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00111100,
                    0b00001100,
                    0b00011000,
                    0b00110000,
                    0b00111100],

            '+' => [0b00000000,
                    0b00000000,
                    0b00001000,
                    0b00001000,
                    0b00111110,
                    0b00001000,
                    0b00001000,
                    0b00000000],
            '-' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00111100,
                    0b00000000,
                    0b00000000,
                    0b00000000],
            '*' => [0b00000000,
                    0b00000000,
                    0b00110110,
                    0b00011100,
                    0b01111111,
                    0b00011100,
                    0b00110110,
                    0b00000000],
            '/' => [0b00000000,
                    0b00000000,
                    0b00000110,
                    0b00001100,
                    0b00011000,
                    0b00110000,
                    0b01100000,
                    0b00000000],
            '%' => [0b00000000,
                    0b01100000,
                    0b01100110,
                    0b00001100,
                    0b00011000,
                    0b00110000,
                    0b01100110,
                    0b00000110],
            '=' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00111100,
                    0b00000000,
                    0b00111100,
                    0b00000000,
                    0b00000000],
            '~' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00111010,
                    0b01101100,
                    0b00000000,
                    0b00000000,
                    0b00000000],
            '^' => [0b00000000,
                    0b00001000,
                    0b00010100,
                    0b00100010,
                    0b01000001,
                    0b00000000,
                    0b00000000,
                    0b00000000],
            '<' => [0b00000000,
                    0b00000110,
                    0b00001100,
                    0b00011000,
                    0b00110000,
                    0b00011000,
                    0b00001100,
                    0b00000110],
            '>' => [0b00000000,
                    0b01100000,
                    0b00110000,
                    0b00011000,
                    0b00001100,
                    0b00011000,
                    0b00110000,
                    0b01100000],
            '(' => [0b00000000,
                    0b00000110,
                    0b00001100,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00001100,
                    0b00000110],
            ')' => [0b00000000,
                    0b01100000,
                    0b00110000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00110000,
                    0b01100000],
            '[' => [0b00000000,
                    0b00011110,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011110],
            ']' => [0b00000000,
                    0b01111000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b00011000,
                    0b01111000],
            '{' => [0b00000000,
                    0b00001110,
                    0b00011000,
                    0b00011000,
                    0b00110000,
                    0b00011000,
                    0b00011000,
                    0b00001110],
            '}' => [0b00000000,
                    0b01110000,
                    0b00011000,
                    0b00011000,
                    0b00001100,
                    0b00011000,
                    0b00011000,
                    0b01110000],
            '.' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000,
                    0b01100000,
                    0b01100000],
            ':' => [0b00000000,
                    0b00000000,
                    0b00011000,
                    0b00011000,
                    0b00000000,
                    0b00011000,
                    0b00011000,
                    0b00000000],
            ';' => [0b00000000,
                    0b00000000,
                    0b00011000,
                    0b00011000,
                    0b00000000,
                    0b00011000,
                    0b00011000,
                    0b00110000],
            ',' => [0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00000000,
                    0b00110000,
                    0b00110000,
                    0b00110000,
                    0b01100000],
            '!' => [0b00000000,
                    0b00011000,
                    0b00111100,
                    0b00111100,
                    0b00011000,
                    0b00011000,
                    0b00000000,
                    0b00011000],
            '?' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b00000110,
                    0b00011100,
                    0b00011000,
                    0b00000000,
                    0b00011000],
            '@' => [0b00000000,
                    0b00111000,
                    0b01000100,
                    0b01011100,
                    0b01011000,
                    0b01000010,
                    0b00111100,
                    0b00000000],
            '&' => [0b00000000,
                    0b00111100,
                    0b01100110,
                    0b00111100,
                    0b00101000,
                    0b01100101,
                    0b01100110,
                    0b00111111],
            '$' => [0b00000000,
                    0b00001000,
                    0b00011110,
                    0b00100000,
                    0b00011100,
                    0b00000010,
                    0b00111100,
                    0b00001000],
            '#' => [0b00000000,
                    0b00110110,
                    0b00110110,
                    0b01111111,
                    0b00110110,
                    0b01111111,
                    0b00110110,
                    0b00110110],
            '↑' => [0b00000000,
                    0b00001000,
                    0b00011100,
                    0b00111110,
                    0b01111111,
                    0b00011100,
                    0b00011100,
                    0b00011100],
            '↓' => [0b00000000,
                    0b00011100,
                    0b00011100,
                    0b00011100,
                    0b01111111,
                    0b00111110,
                    0b00011100,
                    0b00001000],
            '→' => [0b00000000,
                    0b00001000,
                    0b00001100,
                    0b01111110,
                    0b01111111,
                    0b01111110,
                    0b00001100,
                    0b00001000],
            '←' => [0b00000000,
                    0b00001000,
                    0b00011000,
                    0b00111111,
                    0b01111111,
                    0b00111111,
                    0b00011000,
                    0b00001000],
            '▲' => [0b00000000,
                    0b00001000,
                    0b00011100,
                    0b00011100,
                    0b00111110,
                    0b00111110,
                    0b01111111,
                    0b01111111],
            '▼' => [0b00000000,
                    0b01111111,
                    0b01111111,
                    0b00111110,
                    0b00111110,
                    0b00011100,
                    0b00011100,
                    0b00001000],
            '▶' => [0b00000000,
                    0b01100000,
                    0b01111000,
                    0b01111110,
                    0b01111111,
                    0b01111110,
                    0b01111000,
                    0b01100000],
            '◀' => [0b00000000,
                    0b00000011,
                    0b00001111,
                    0b00111111,
                    0b01111111,
                    0b00111111,
                    0b00001111,
                    0b00000011],
            // '1' => [0b00000000,
            //                            0b00111110,
            //                            0b01000001,
            //                            0b01010101,
            //                            0b01000001,
            //                            0b01010101,
            //                            0b01001001,
            //                            0b00111110],
            // '1' => [0b00000000,
            //                            0b00111110,
            //                            0b01111111,
            //                            0b01101011,
            //                            0b01111111,
            //                            0b01101011,
            //                            0b01110111,
            //                            0b00111110],
            // '1' => [0b00000000,
            //                            0b00100010,
            //                            0b01110111,
            //                            0b01111111,
            //                            0b01111111,
            //                            0b00111110,
            //                            0b00011100,
            //                            0b00001000],
            // '1' => [0b00000000,
            //                            0b00001000,
            //                            0b00011100,
            //                            0b00111110,
            //                            0b01111111,
            //                            0b00111110,
            //                            0b00011100,
            //                            0b00001000],
            // '1' => [0b00000000,
            //                            0b00001000,
            //                            0b00011100,
            //                            0b00101010,
            //                            0b01111111,
            //                            0b00101010,
            //                            0b00001000,
            //                            0b00011100],
            // '1' => [0b00000000,
            //                            0b00001000,
            //                            0b00011100,
            //                            0b00111110,
            //                            0b01111111,
            //                            0b00111110,
            //                            0b00001000,
            //                            0b00011100],
            // '1' => [0b00000000,
            //                            0b00000000,
            //                            0b00011100,
            //                            0b00111110,
            //                            0b00111110,
            //                            0b00111110,
            //                            0b00011100,
            //                            0b00000000],
            // '1' => [0b11111111,
            //                            0b11111111,
            //                            0b11100011,
            //                            0b11000001,
            //                            0b11000001,
            //                            0b11000001,
            //                            0b11100011,
            //                            0b11111111],
            // '1' => [0b00000000,
            //                            0b00000000,
            //                            0b00011100,
            //                            0b00100010,
            //                            0b00100010,
            //                            0b00100010,
            //                            0b00011100,
            //                            0b00000000],
            // '1' => [0b11111111,
            //                            0b11111111,
            //                            0b11100011,
            //                            0b11011101,
            //                            0b11011101,
            //                            0b11011101,
            //                            0b11100011,
            //                            0b11111111],
            // '1' => [0b00000000,
            //                            0b00001111,
            //                            0b00000011,
            //                            0b00000101,
            //                            0b00111001,
            //                            0b01001000,
            //                            0b01001000,
            //                            0b00110000],
            // '1' => [0b00000000,
            //                            0b00001000,
            //                            0b00111110,
            //                            0b00001000,
            //                            0b00011100,
            //                            0b00100010,
            //                            0b00100010,
            //                            0b00011100],
            // '1' => [0b00000000,
            //                            0b00011000,
            //                            0b00010100,
            //                            0b00010000,
            //                            0b00010000,
            //                            0b00110000,
            //                            0b01110000,
            //                            0b01100000],
            // '1' => [0b00000000,
            //                            0b00001111,
            //                            0b00011001,
            //                            0b00010001,
            //                            0b00010011,
            //                            0b00110111,
            //                            0b01110110,
            //                            0b01100000],
            // '1' => [0b00000000,
            //                            0b00001000,
            //                            0b00101010,
            //                            0b00011100,
            //                            0b01110111,
            //                            0b00011100,
            //                            0b00101010,
            //                            0b00001000],
            // '1' => [0b00000000,
            //                            0b00001000,
            //                            0b00011100,
            //                            0b00101010,
            //                            0b00001000,
            //                            0b00101010,
            //                            0b00011100,
            //                            0b00001000],
            // '1' => [0b00000000,
            //                            0b01100110,
            //                            0b01100110,
            //                            0b01100110,
            //                            0b01100110,
            //                            0b00000000,
            //                            0b01100110,
            //                            0b01100110],
            // '1' => [0b00000000,
            //                            0b00000000,
            //                            0b00010100,
            //                            0b00100010,
            //                            0b01111111,
            //                            0b00100010,
            //                            0b00010100,
            //                            0b00000000],
            // '1' => [0b00000000,
            //                            0b00110110,
            //                            0b00110110,
            //                            0b00010100,
            //                            0b00000000,
            //                            0b00000000,
            //                            0b00000000,
            //                            0b00000000],
            // '1' => [0b00000000,
            //                            0b00000000,
            //                            0b01100000,
            //                            0b00110000,
            //                            0b00011000,
            //                            0b00001100,
            //                            0b00000110,
            //                            0b00000000],
            // '1' => [0b00000000,
            //                            0b00001100,
            //                            0b00001100,
            //                            0b00000110,
            //                            0b00000000,
            //                            0b00000000,
            //                            0b00000000,
            //                            0b00000000],
            // '1' => [0b00000000,
            //                            0b00011000,
            //                            0b00011000,
            //                            0b00011000,
            //                            0b00110000,
            //                            0b00000000,
            //                            0b00000000,
            //                            0b00000000],
            // '1' => [0b00000000,
            //                            0b00001000,
            //                            0b00011100,
            //                            0b00110110,
            //                            0b01100011,
            //                            0b01000001,
            //                            0b01000001,
            //                            0b01111111],
            _ => return Err(())
        };
        for x in &mut ret {
            *x = (*x).reverse_bits();
        }
        Ok(ret)
    }

    /// Modify the pixel buffer to match `s` string content.
    pub fn fromstr(&mut self, s: &str) -> Result<(),()> {
        for i in 0..minv!(<N as Unsigned>::to_usize(), s.len()) {
            self.pixels[i] = Self::from(s.as_bytes()[i] as char)?;
        }
        Ok(())
    }

    /// Modify the pixel buffer to match `s` byte array content.
    pub fn fromarr(&mut self, s: &[u8]) -> Result<(),()>{
        for i in 0..minv!(<N as Unsigned>::to_usize(),s.len()) {
            self.pixels[i] = Self::from(s[i] as char)?;
        }
        Ok(())
    }

    /// Clears the pixel buffer
    pub fn clear(&mut self) {
        self.pixels = GenericArray::default();//[[0u8;8];SIZE];
    }

    /// Does the union
    pub fn union(&mut self, block: usize, o: &PixLine) {
        for i in 0..8 {
            self.pixels[block][i] |= o[i];
        }
    }

    /// Sets the value to `v` for the pixel at position `line`, `col`.
    pub fn set_pixel(&mut self, line : usize, col : usize , v : bool) -> Result<(),()> {
        let block = col / 8;
        if v {
            self.pixels[block][line] |= 1<<col;
        } else {
            self.pixels[block][line] &= !(1<<col );
        }
        Ok(())
    }

    /// Gets the value of the pixel at position `line`, `col`.
    pub fn get_pixel(&self, line : usize, col : usize) -> Result<u8,()> {
        Ok(self.pixels[col / 8][line] & (1<<col) as u8)
    }

    /// Gets the values of pixels in LED block `block` and line `l`.
    pub fn get_pixel_line(&self, block: usize, l : usize) -> Result<u8,()> {
        Ok(self.pixels[block][l])
    }

    /// Shifts left the pixel buffer. If `rotate` is true,
    /// performs a rotation (ie. pixels going out on the left
    /// are used for the new pixels on the right).
    pub fn lshift(&mut self, rotate : bool) {
        for line in 0..8 {
            let mut inp = if rotate { self.pixels[0][line] & 1 } else { 0 };
            let mut outp;

            for block in (0..<N as Unsigned>::to_usize()).rev() {
                let mut v = self.pixels[block][line];
                outp = v & 1;
                v = (inp<<7) | (v>>1);
                self.pixels[block][line] = v;
                inp = outp;
            }
        }
    }

    /// Shifts right the pixel buffer. If `rotate` is true,
    /// performs a rotation (ie. pixels going out on the right
    /// are used for the new pixels on the left).
    pub fn rshift(&mut self, rotate : bool) {
        for line in 0..8 {
            let mut inp = if rotate { (self.pixels[<N as Unsigned>::to_usize()-1][line] & (1<<7))>>7 } else { 0 };
            let mut outp;

            for block in 0..<N as Unsigned>::to_usize() {
                let mut v = self.pixels[block][line];
                outp = (v & (1<<7))>>7;
                v = inp | (v<<1);
                self.pixels[block][line] = v;
                inp = outp;
            }
        }
    }

    /// Shifts down the pixel buffer. If `rotate` is true,
    /// performs a rotation (ie. pixels going out at the bottom
    /// are used for the new pixels at the top).
    pub fn dshift(&mut self, rotate : bool) {
        for block in 0..<N as Unsigned>::to_usize() {
            let mut prev_line = if rotate { self.pixels[block][7] } else { 0u8 };

            for line in 0..8 {
                let cur_line = self.pixels[block][line];
                self.pixels[block][line] = prev_line;
                prev_line = cur_line;
            }
        }
    }

    /// Shifts up the pixel buffer. If `rotate` is true,
    /// performs a rotation (ie. pixels going out at the top
    /// are used for the new pixels at the bottom).
    pub fn ushift(&mut self, rotate : bool) {
        for block in 0..<N as Unsigned>::to_usize() {
            let mut prev_line = if rotate { self.pixels[block][0] } else { 0u8 };

            for line in (0..8).rev() {
                let cur_line = self.pixels[block][line];
                self.pixels[block][line] = prev_line;
                prev_line = cur_line;
            }
        }
    }
}

/// Bob
pub trait WritePixel<E,N>
where N: ArrayLength<PixLine> {
    /// bob
    fn write_lines(&mut self, line_index: u8, vals: &[u8]) -> Result<(),E>;
    /// bob
    fn write_pixbuf(&mut self, pixbuf: &PixArray<N>) -> Result<(),E>;
}

impl<SPI,P,E,N> WritePixel<E,N> for Max7219<SPI,P>
where SPI: spi::Write<u8,Error = E>,
      P: OutputPin,
      N: ArrayLength<PixLine> {
    /// Writes a line
    fn write_lines(&mut self, line_index: u8, vals: &[u8]) -> Result<(),E> {
        self.cs.set_low();
        for i in 0..minv!(<N as Unsigned>::to_usize(), vals.len()) {
            self.set_reg(max7219::Max7219Regs::from(line_index), vals[i as usize])?;
        }
        self.cs.set_high();
        Ok(())
    }

    fn write_pixbuf(&mut self, pixbuf: &PixArray<N>) -> Result<(),E>{
        for l in 0..8 {
            let line = max7219::Max7219Regs::from(7-l);
            self.cs.set_low();
            for i in (0..<N as Unsigned>::to_usize()).rev() {
                self.set_reg(line, pixbuf.get_pixel_line(i ,l as usize).unwrap())?;
            }
            self.cs.set_high();
        }
        Ok(())
    }
}
    // }

//}
